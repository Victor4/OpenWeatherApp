// Generated by view binder compiler. Do not edit!
package com.victor.weather.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.victor.weather.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFirstColumnBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView humidityTextView;

  @NonNull
  public final TextView sunriseTextView;

  @NonNull
  public final ImageView weatherImageView;

  @NonNull
  public final TextView weatherTextView;

  private ActivityFirstColumnBinding(@NonNull LinearLayout rootView,
      @NonNull TextView humidityTextView, @NonNull TextView sunriseTextView,
      @NonNull ImageView weatherImageView, @NonNull TextView weatherTextView) {
    this.rootView = rootView;
    this.humidityTextView = humidityTextView;
    this.sunriseTextView = sunriseTextView;
    this.weatherImageView = weatherImageView;
    this.weatherTextView = weatherTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFirstColumnBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFirstColumnBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_first_column, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFirstColumnBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.humidityTextView;
      TextView humidityTextView = rootView.findViewById(id);
      if (humidityTextView == null) {
        break missingId;
      }

      id = R.id.sunriseTextView;
      TextView sunriseTextView = rootView.findViewById(id);
      if (sunriseTextView == null) {
        break missingId;
      }

      id = R.id.weatherImageView;
      ImageView weatherImageView = rootView.findViewById(id);
      if (weatherImageView == null) {
        break missingId;
      }

      id = R.id.weatherTextView;
      TextView weatherTextView = rootView.findViewById(id);
      if (weatherTextView == null) {
        break missingId;
      }

      return new ActivityFirstColumnBinding((LinearLayout) rootView, humidityTextView,
          sunriseTextView, weatherImageView, weatherTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
