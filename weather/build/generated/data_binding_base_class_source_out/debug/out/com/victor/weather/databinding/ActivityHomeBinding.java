// Generated by view binder compiler. Do not edit!
package com.victor.weather.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.victor.weather.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView bottomSheet;

  @NonNull
  public final ConstraintLayout cityInfoConstraintLayout;

  @NonNull
  public final TextView dateAndTimeTextView;

  @NonNull
  public final ConstraintLayout dateAndcityInfoConstraintLayout;

  @NonNull
  public final ActivityFirstColumnBinding firstColumnLayout;

  @NonNull
  public final ImageView locationImageView;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final FullContentMainBottomsheetBinding searchBottomSheet;

  @NonNull
  public final TextView searchEmptyTextView;

  @NonNull
  public final ActivitySecondColumnBinding secondColumnLayout;

  @NonNull
  public final LinearLayout tempEmptySearchLinearLayout;

  @NonNull
  public final LinearLayout tempInfoLinearLayout;

  @NonNull
  public final ActivityThridColumnBinding thirdColumnLayout;

  @NonNull
  public final ImageView wallpaperImageView;

  @NonNull
  public final CardView weather;

  private ActivityHomeBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView bottomSheet, @NonNull ConstraintLayout cityInfoConstraintLayout,
      @NonNull TextView dateAndTimeTextView,
      @NonNull ConstraintLayout dateAndcityInfoConstraintLayout,
      @NonNull ActivityFirstColumnBinding firstColumnLayout, @NonNull ImageView locationImageView,
      @NonNull TextView locationTextView,
      @NonNull FullContentMainBottomsheetBinding searchBottomSheet,
      @NonNull TextView searchEmptyTextView,
      @NonNull ActivitySecondColumnBinding secondColumnLayout,
      @NonNull LinearLayout tempEmptySearchLinearLayout, @NonNull LinearLayout tempInfoLinearLayout,
      @NonNull ActivityThridColumnBinding thirdColumnLayout, @NonNull ImageView wallpaperImageView,
      @NonNull CardView weather) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.cityInfoConstraintLayout = cityInfoConstraintLayout;
    this.dateAndTimeTextView = dateAndTimeTextView;
    this.dateAndcityInfoConstraintLayout = dateAndcityInfoConstraintLayout;
    this.firstColumnLayout = firstColumnLayout;
    this.locationImageView = locationImageView;
    this.locationTextView = locationTextView;
    this.searchBottomSheet = searchBottomSheet;
    this.searchEmptyTextView = searchEmptyTextView;
    this.secondColumnLayout = secondColumnLayout;
    this.tempEmptySearchLinearLayout = tempEmptySearchLinearLayout;
    this.tempInfoLinearLayout = tempInfoLinearLayout;
    this.thirdColumnLayout = thirdColumnLayout;
    this.wallpaperImageView = wallpaperImageView;
    this.weather = weather;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheet;
      MaterialCardView bottomSheet = rootView.findViewById(id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.cityInfoConstraintLayout;
      ConstraintLayout cityInfoConstraintLayout = rootView.findViewById(id);
      if (cityInfoConstraintLayout == null) {
        break missingId;
      }

      id = R.id.dateAndTimeTextView;
      TextView dateAndTimeTextView = rootView.findViewById(id);
      if (dateAndTimeTextView == null) {
        break missingId;
      }

      id = R.id.dateAndcityInfoConstraintLayout;
      ConstraintLayout dateAndcityInfoConstraintLayout = rootView.findViewById(id);
      if (dateAndcityInfoConstraintLayout == null) {
        break missingId;
      }

      id = R.id.firstColumnLayout;
      View firstColumnLayout = rootView.findViewById(id);
      if (firstColumnLayout == null) {
        break missingId;
      }
      ActivityFirstColumnBinding binding_firstColumnLayout = ActivityFirstColumnBinding.bind(firstColumnLayout);

      id = R.id.locationImageView;
      ImageView locationImageView = rootView.findViewById(id);
      if (locationImageView == null) {
        break missingId;
      }

      id = R.id.locationTextView;
      TextView locationTextView = rootView.findViewById(id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.searchBottomSheet;
      View searchBottomSheet = rootView.findViewById(id);
      if (searchBottomSheet == null) {
        break missingId;
      }
      FullContentMainBottomsheetBinding binding_searchBottomSheet = FullContentMainBottomsheetBinding.bind(searchBottomSheet);

      id = R.id.searchEmptyTextView;
      TextView searchEmptyTextView = rootView.findViewById(id);
      if (searchEmptyTextView == null) {
        break missingId;
      }

      id = R.id.secondColumnLayout;
      View secondColumnLayout = rootView.findViewById(id);
      if (secondColumnLayout == null) {
        break missingId;
      }
      ActivitySecondColumnBinding binding_secondColumnLayout = ActivitySecondColumnBinding.bind(secondColumnLayout);

      id = R.id.tempEmptySearchLinearLayout;
      LinearLayout tempEmptySearchLinearLayout = rootView.findViewById(id);
      if (tempEmptySearchLinearLayout == null) {
        break missingId;
      }

      id = R.id.tempInfoLinearLayout;
      LinearLayout tempInfoLinearLayout = rootView.findViewById(id);
      if (tempInfoLinearLayout == null) {
        break missingId;
      }

      id = R.id.thirdColumnLayout;
      View thirdColumnLayout = rootView.findViewById(id);
      if (thirdColumnLayout == null) {
        break missingId;
      }
      ActivityThridColumnBinding binding_thirdColumnLayout = ActivityThridColumnBinding.bind(thirdColumnLayout);

      id = R.id.wallpaperImageView;
      ImageView wallpaperImageView = rootView.findViewById(id);
      if (wallpaperImageView == null) {
        break missingId;
      }

      id = R.id.weather;
      CardView weather = rootView.findViewById(id);
      if (weather == null) {
        break missingId;
      }

      return new ActivityHomeBinding((CoordinatorLayout) rootView, bottomSheet,
          cityInfoConstraintLayout, dateAndTimeTextView, dateAndcityInfoConstraintLayout,
          binding_firstColumnLayout, locationImageView, locationTextView, binding_searchBottomSheet,
          searchEmptyTextView, binding_secondColumnLayout, tempEmptySearchLinearLayout,
          tempInfoLinearLayout, binding_thirdColumnLayout, wallpaperImageView, weather);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
